# https://github.com/docker-library/docs/blob/master/postgres/README.md
# Use postgres/example user/password credentials

services:

  db:
    image: postgres
    restart: always
    container_name: chase-demo
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chase-db
  
  # # The name of our service is "database"
  # # but you can use the name of your choice.
  # # Note: This may change the commands you are going to use a little bit.
  # database:
  #   # Official Postgres image from DockerHub (we use the last version)
  #   image: postgres:alpine

  #   # reference name that can be used to exec into the container
  #   container_name: chases-postgres-demo

  #   # This makes our data accessible whenever our applications are running
  #   # and keeps the Adminer management service active simultaneously. When
  #   # a container fails, this ensures that a new one starts right up.
  #   restart: always

  #   environment:
  #    POSTGRES_PASSWORD: "postgres"
  #    POSTGRES_USER: "postgres"
  #    POSTGRES_DB: "demo-db" # The PostgreSQL default database (automatically created at first launch)
  #     # POSTGRES_HOST_AUTH_METHOD: trust # allow all connections without a password. This is *not* recommended.
  
  #   # By default, a Postgres database is running on the 5432 port.
  #   # If we want to access the database from our computer (outside the container),
  #   # we must share the port with our computer's port.
  #   # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
  #   # Note: You are free to change your computer's port,
  #   # but take into consideration that it will change the way
  #   # you are connecting to your database.
  #   ports:
  #     - 5432:5432

  #   # The `volumes` tag allows us to share a folder with our container.
  #   # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]
  #   volumes:
  #     # In this example, we share the folder `db-data` in our root repository, with the default PostgreSQL data path.
  #     # It means that every time the repository is modifying the data inside
  #     # of `/var/lib/postgresql/data/`, automatically the change will appear in `db-data`.
  #     # You don't need to create the `db-data` folder. Docker Compose will do it for you.
  #     - ./db-data/:/var/lib/postgresql/data/